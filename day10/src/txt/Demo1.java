package txt;
/*1、多态是什么，多态的前提条件是什么?
对象在不同时刻表现得不同形态，前提是存在继承关系、父类的引用指向子类的对象、子类重写父类的方法
2、多态中成员访问的特点分别是什么?
	成员变量 
父类的引用不能访问子类的成员变量
	成员方法(非静态方法)
父类的引用不能访问子类独有的方法，若子类重写父类的方法，则父类的引用可以使用子类重写的方法
	静态方法
父类的引用不能访问子类的静态方法；
3、多态的好处和弊端分别是什么？
好处：提高扩展性，父类的引用作为形参，子类的对象作为实参，根据子类的对象不同实现不同的功能；
弊端：父类不能使用子类独有的方法
4、什么是向上转型，什么是向下转型？
	向上转型：父类的引用指向子类的对象
向下转型：子类的引用指向被强转为子类对象的父类引用
5、什么是抽象类，它的特点是什么？
有抽象方法的类为抽象类；
特点：必须被abstract关键字修饰
抽象类不一定有抽象方法
抽象类不可以实例化
继承抽象类的普通类必须重写抽象方法，若是抽象类就可以不用重写
6、抽象类的成员特点有哪些?
成员变量：和普通类的变量一样
成员方法：可以有抽象方法，也可以没有抽象方法
构造方法：有构造方法，但不能被实例化
7、抽象类的面试题：
	A、一个类如果没有抽象方法，可不可以定义为抽象类?如果可以，有什么意义?
可以，定义为抽象类就意味着不能直接创建对象，需要使用其子类创建对象，这样可以隐藏方法的具体实现，只提供函数定义
	B、abstract不能和哪些关键字共存，为什么？
static、private、final，因为这三个关键词修饰的方法都不能被重写，和abstract修饰的的作用相互冲突
8、什么是接口，它的特点是什么？
比抽象类更加抽象的表现形式，就是接口
接口的特点：
	1.接口不能创建对象
	2.如果一个类想要实现一个接口：
		a.该类是一个抽象类，就可以不用重写接口中的抽象方法
		b.该类是一个普通类，就必须重写接口中的所有的抽象方法

9、接口的成员特点有哪些？
成员变量：接口中所有的成员变量都是自定义常量
	
成员方法：接口中所有的成员方法都是抽象方法(这句话并不完全准确)
		
		
构造方法：没有构造方法
10、抽象类和接口的区别是什么?
修饰的关键字不同；抽象类有构造方法，接口没有；抽象类的属性为变量，接口为自定义常量；接口只能有抽象方法，
抽象类可以有抽象方法也可以普通方法；*/
public class Demo1 {

}
